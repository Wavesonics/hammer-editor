# https://developer.android.com/build/migrate-to-catalogs

[versions]
# App Versions
app = "1.7.2"
data_version = "1.0"

# Kotlin
jvm = "17"
kotlin = "2.0.20"

# Android
android_gradle_plugin = "8.6.0"
android_sdk_compile = "34"
android_sdk_target = "34"
android_sdk_min = "26"

# Other libraries
activity-compose = "1.9.2"
androidx-runner = "1.6.2"
androidx-datastore = "1.1.1"
androidx-window = "1.3.0"
appcompat = "1.7.0"
appdirs = "1.2.2"
cache4k = "0.13.0"
core = "1.6.1"
coreKtx = "1.13.1"
cryptohash = "1.0.2"
darklafCore = "3.0.2"
glance = "1.1.0"
jSystemThemeDetector = "3.8"
junit = "1.2.1"
kotlinx_cli = "0.3.6"
kotlinx_atomicfu = "0.25.0"
kwebCore = "1.4.12"
markdown = "0.7.3"
material = "1.12.0"
orchestrator = "1.5.0"

serialization = "1.7.2"
serialization_json = "1.7.2"

coroutines = "1.9.0"
datetime = "0.6.1"
napier = "2.7.1"
jetbrains_compose = "1.6.11"
jetbrains_kover = "0.8.3"

moko_resources = "0.24.2"
moko_graphics = "0.10.0"

decompose = "3.1.0"
essenty = "2.1.0" # This should match what ever decompose is referncing internally

mpfilepicker = "3.1.0"
richtexteditor = "1.4.1"
composericheditor = "1.0.0-rc06"
koalaplot-core = "0.6.3"
image-loader = "1.8.1"
image-loader-blur = "1.7.7"

koin_bom = "3.5.6"

cokoin = "1.0.0"

ktor = "2.3.12"
ktor_i18n = "2.0.0"

okio = "3.9.0"
slf4jSimple = "2.0.16"
uuid = "0.8.4"
work-runtime-ktx = "2.9.1"

multiplatform_window_size = "0.5.0"
mockk = "1.13.12"

tomlkt = "0.4.0"

krypto = "4.0.10"

sqldelight = "2.0.2"
buildconfig = "5.4.0"
fluidsonic_locale = "0.13.0"
resources = "1.1.0"
aboutlibraries = "11.2.3"
logback_classic = "1.4.14"
multiplatform_settings = "1.2.0"
korge_core = "5.4.0"

moko-permissions = "0.18.0"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
appdirs = { module = "net.harawata:appdirs", version.ref = "appdirs" }
cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.ref = "cache4k" }
core = { module = "androidx.test:core", version.ref = "core" }
core-ktx = { module = "androidx.test:core-ktx", version.ref = "core" }
cryptohash = { module = "com.appmattus.crypto:cryptohash", version.ref = "cryptohash" }
darklaf-core = { module = "com.github.weisj:darklaf-core", version.ref = "darklafCore" }
glance = { module = "androidx.glance:glance", version.ref = "glance" }
glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
glance-material3 = { module = "androidx.glance:glance-material3", version.ref = "glance" }

jetbrains_compose_ui_util = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "jetbrains_compose" }
jetbrains_compose_ui_text = { module = "org.jetbrains.compose.ui:ui-text", version.ref = "jetbrains_compose" }

imageloader = { group = "io.github.qdsfdhvh", name = "image-loader", version.ref = "image-loader" }
imageloader_moko = { group = "io.github.qdsfdhvh", name = "image-loader-extension-moko-resources", version.ref = "image-loader" }
imageloader_blur = { group = "io.github.qdsfdhvh", name = "image-loader-extension-blur", version.ref = "image-loader-blur" }

jSystemThemeDetector = { module = "com.github.Dansoftowner:jSystemThemeDetector", version.ref = "jSystemThemeDetector" }
junit = { module = "androidx.test.ext:junit", version.ref = "junit" }
junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit" }
koalaplot-core = { module = "io.github.koalaplot:koalaplot-core", version.ref = "koalaplot-core" }

kotlin_reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlin_test_junit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit", version.ref = "kotlin" }

kotlinx-cli = { module = "org.jetbrains.kotlinx:kotlinx-cli", version.ref = "kotlinx_cli" }
kotlinx_datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "datetime" }
kotlinx_atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu", version.ref = "kotlinx_atomicfu" }
kotlinx_atomicfu_plugin = { group = "org.jetbrains.kotlinx", name = "atomicfu-gradle-plugin", version.ref = "kotlinx_atomicfu" }

kweb-core = { module = "io.kweb:kweb-core", version.ref = "kwebCore" }
markdown = { module = "org.jetbrains:markdown", version.ref = "markdown" }
multiplatform_window_size = { group = "dev.chrisbanes.material3", name = "material3-window-size-class-multiplatform", version.ref = "multiplatform_window_size" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }
napier = { group = "io.github.aakira", name = "napier", version.ref = "napier" }

decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose_compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }
decompose_android = { group = "com.arkivanov.decompose", name = "extensions-android", version.ref = "decompose" }

essenty_lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }
essenty_lifecycle_coroutines = { group = "com.arkivanov.essenty", name = "lifecycle-coroutines", version.ref = "essenty" }

moko_resources = { group = "dev.icerock.moko", name = "resources", version.ref = "moko_resources" }
moko_resources_compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko_resources" }
moko_resources_generator = { group = "dev.icerock.moko", name = "resources-generator", version.ref = "moko_resources" }
moko_resources_test = { group = "dev.icerock.moko", name = "resources-test", version.ref = "moko_resources" }
moko_graphics = { group = "dev.icerock.moko", name = "graphics", version.ref = "moko_graphics" }
orchestrator = { module = "androidx.test:orchestrator", version.ref = "orchestrator" }

mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }

richtexteditor = { module = "com.darkrockstudios:richtexteditor", version.ref = "richtexteditor" }
composericheditor = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "composericheditor" }
androidx_runner = { module = "androidx.test:runner", version.ref = "androidx-runner" }
androidx_datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
androidx_window = { module = "androidx.window:window", version.ref = "androidx-window" }
serialization_core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "serialization" }
serialization_jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core-jvm", version.ref = "serialization" }
serialization_json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serialization_json" }

coroutines_core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines_android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines_swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }
coroutines_jdk8 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-jdk8", version.ref = "coroutines" }
coroutines_test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }

koin_bom = { group = "io.insert-koin", name = "koin-bom", version.ref = "koin_bom" }
koin_core = { group = "io.insert-koin", name = "koin-core" }
koin_core_coroutines = { group = "io.insert-koin", name = "koin-core-coroutines" }
koin_android = { group = "io.insert-koin", name = "koin-android" }
koin_test = { group = "io.insert-koin", name = "koin-test" }
koin_sl4j = { group = "io.insert-koin", name = "koin-logger-slf4j" }
koin_ktor = { group = "io.insert-koin", name = "koin-ktor" }
koin_compose = { group = "io.insert-koin", name = "koin-compose" }

cokoin = { group = "dev.burnoo", name = "cokoin", version.ref = "cokoin" }

tomlkt = { group = "net.peanuuutz.tomlkt", name = "tomlkt", version.ref = "tomlkt" }

ktor_client_core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor_client_auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor_client_logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor_client_content_negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor_client_encoding = { group = "io.ktor", name = "ktor-client-encoding", version.ref = "ktor" }
ktor_client_okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor_client_darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor_client_java = { group = "io.ktor", name = "ktor-client-java", version.ref = "ktor" }

ktor_serialization_kotlinx_json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor_server_contentnegotiationsjvm = { group = "io.ktor", name = "ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor_server_corejvm = { group = "io.ktor", name = "ktor-server-core-jvm", version.ref = "ktor" }
ktor_server_serializationkotlinxjsonjvm = { group = "io.ktor", name = "ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor_server_callloggingjvm = { group = "io.ktor", name = "ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor_server_defaultheadersjvm = { group = "io.ktor", name = "ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor_server_compressionjvm = { group = "io.ktor", name = "ktor-server-compression-jvm", version.ref = "ktor" }
ktor_server_cachingheadersjvm = { group = "io.ktor", name = "ktor-server-caching-headers-jvm", version.ref = "ktor" }
ktor_server_authjvm = { group = "io.ktor", name = "ktor-server-auth-jvm", version.ref = "ktor" }
ktor_server_nettyjvm = { group = "io.ktor", name = "ktor-server-netty-jvm", version.ref = "ktor" }
ktor_server_httpredirect = { group = "io.ktor", name = "ktor-server-http-redirect", version.ref = "ktor" }
ktor_server_websockets = { group = "io.ktor", name = "ktor-server-websockets", version.ref = "ktor" }

ktor_server_i18n = { group = "com.github.aymanizz", name = "ktor-i18n", version.ref = "ktor_i18n" }

ktor_server_testsjvm = { group = "io.ktor", name = "ktor-server-tests-jvm", version.ref = "ktor" }
ktor_server_testshostjvm = { group = "io.ktor", name = "ktor-server-test-host-jvm", version.ref = "ktor" }

ktor_network_tlscertificates = { group = "io.ktor", name = "ktor-network-tls-certificates", version.ref = "ktor" }

okio = { group = "com.squareup.okio", name = "okio", version.ref = "okio" }
okio_fakefilesystem = { group = "com.squareup.okio", name = "okio-fakefilesystem", version.ref = "okio" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jSimple" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx" }

korlibs_krypto = { group = "com.soywiz.korlibs.krypto", name = "krypto", version.ref = "krypto" }
korlibs_korio = { group = "com.soywiz.korlibs.korio", name = "korio", version.ref = "krypto" }

sqldelight_driver = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqldelight" }
sqldelight_adapters = { group = "app.cash.sqldelight", name = "primitive-adapters", version.ref = "sqldelight" }

fluidsonic_locale = { group = "io.fluidsonic.locale", name = "fluid-locale", version.ref = "fluidsonic_locale" }
resources = { group = "io.herrera.kevin", name = "resource", version.ref = "resources" }
aboutlibraries_core = { group = "com.mikepenz", name = "aboutlibraries-core", version.ref = "aboutlibraries" }
aboutlibraries_compose = { group = "com.mikepenz", name = "aboutlibraries-compose-m3", version.ref = "aboutlibraries" }

jetbrains_kover = { group = "org.jetbrains.kotlinx", name = "kover-gradle-plugin", version.ref = "jetbrains_kover" }
#logback_classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback_classic" }

multiplatform_settings = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "multiplatform_settings" }
korge-core = { group = "com.soywiz.korge", name = "korge-core", version.ref = "korge-core" }

moko-permissions = { group = "dev.icerock.moko", name = "permissions", version.ref = "moko-permissions" }
moko-permissions-compose = { group = "dev.icerock.moko", name = "permissions-compose", version.ref = "moko-permissions" }

#################
# These were added automatically, do we really need them?
#lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
#compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
#ui = { group = "androidx.compose.ui", name = "ui" }
#ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
#ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
#ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
#ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
#ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
#material3 = { group = "androidx.compose.material3", name = "material3" }
#################

[plugins]
kotlin_multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin_serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin_jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin_android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin_parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-powerassert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlinx_atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
android_application = { id = "com.android.application", version.ref = "android_gradle_plugin" }
android_library = { id = "com.android.library", version.ref = "android_gradle_plugin" }
jetbrains_compose = { id = "org.jetbrains.compose", version.ref = "jetbrains_compose" }
compose_compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains_kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "jetbrains_kover" }
moko_resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko_resources" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
aboutlibraries_plugin = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }

[bundles]
koin_server = ["koin_core", "koin_core_coroutines", "koin_sl4j", "koin_ktor"]
ktor_client = [
	"ktor_client_core",
	"ktor_client_auth",
	"ktor_client_logging",
	"ktor_client_content_negotiation",
	"ktor_client_encoding",
]
ktor_server = [
	"ktor_server_contentnegotiationsjvm",
	"ktor_server_corejvm",
	"ktor_server_serializationkotlinxjsonjvm",
	"ktor_server_callloggingjvm",
	"ktor_server_defaultheadersjvm",
	"ktor_server_compressionjvm",
	"ktor_server_cachingheadersjvm",
	"ktor_server_authjvm",
	"ktor_server_nettyjvm",
	"ktor_server_httpredirect",
	"ktor_server_websockets",
	"ktor_server_i18n",
]
essenty = [
	"essenty_lifecycle",
	"essenty_lifecycle_coroutines",
]